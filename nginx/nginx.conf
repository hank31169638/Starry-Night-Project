user  nginx;
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;

events {
    worker_connections  1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

    include /etc/nginx/conf.d/*.conf;
}

server {
    listen 80;
    server_name localhost;

    location / {
        proxy_pass http://127.0.0.1:8000; # 假设 Django 服务叫做 django
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /nextjs/ {
        proxy_pass http://127.0.0.1:3000; # 假设 Next.js 服务叫做 nextjs
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    # 你可以配置 Nginx 来限制对敏感文件或路径的访问。
#     location /admin {
#         allow 192.168.1.1;  # 允许的 IP 地址
#         deny all;           # 禁止其他所有访问
#     }

    # 设置一些 HTTP 安全头部可以帮助防止跨站脚本（XSS）、数据注入等攻击。
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; object-src 'none'";
    #限制请求体的大小可以帮助防止拒绝服务攻击（DoS）。
    client_max_body_size 10M;

    #配置 SSL/TLS：
    #强化 SSL/TLS 设置是保护数据传输安全的重要步骤。确保使用强加密算法，限制较弱的加密和协议版本。
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
#     ssl_certificate /etc/ssl/cert.pem;
#     ssl_certificate_key /etc/ssl/key.pem;

    # 配置 Nginx 来记录访问和错误日志，以便在需要时分析可能的安全问题。
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
